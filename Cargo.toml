[package]
name = "conrod"
version = "0.48.0"
authors = [
    "Mitchell Nordine <mitchell.nordine@gmail.com>",
    "Sven Nilsen <bvssvni@gmail.com>"
]
keywords = ["ui", "widgets", "gui", "interface", "graphics"]
description = "An easy-to-use, 100% Rust, extensible 2D GUI library."
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/pistondevelopers/conrod.git"
homepage = "https://github.com/pistondevelopers/conrod"
documentation = "http://docs.piston.rs/conrod/conrod/"

[lib]
name = "conrod"
path = "./src/lib.rs"

[dependencies]
daggy = "0.4.0"
num = "0.1.30"
pistoncore-input = "0.15.0"
rusttype = "0.2.0"

# Optional dependencies and features
# ----------------------------------
#
# None of the following dependencies are necessary to use conrod, however they may greatly
# simplify the work involved when using conrod with certain window or graphics backends.
#
# `glium`
# Provides functions for rendering the `conrod::render::Primitives` yielded by `Ui::draw`.
# Enables the `conrod::backend::glium` module.
#
# `glutin`
# Provides a function for converting glutin `Event`s to `conrod::event::Raw`s.
# Enables the `conrod::backend::glutin` module.
#
# `piston`
# Provides functions for:
# - Converting piston `GenericEvent` types to `conrod::event::Raw`s.
# - Rendering the `conrod::render::Primitives` yielded by `Ui::draw`.
# Enables the `conrod::backend::piston` module.
# - A convenience wrapper around the various piston window backends,
# (by default, GlutinWindow), and 2d drawing functionality.
# Contains code adapted from the `piston_window` crate.
# - Text cache `G2dTexture` construction.
# - Rendering the `conrod::render::Primitives` yielded by `Ui::draw`.
# Note: Use the `piston` feature for `piston_window` event conversions.
glium = { version = "0.16.0", optional = true }
glutin = { version = "0.7.1", optional = true }
piston2d-graphics = { version = "0.19", optional = true }

gfx = { version = "0.13.0", optional = true }
gfx_core = { version = "0.5.1", optional = true }
gfx_device_gl = { version = "0.12.0", optional = true }
pistoncore-window = { version = "0.24.0", optional = true }
pistoncore-event_loop = { version = "0.27.0", optional = true }
piston2d-gfx_graphics = { version = "0.35.0", optional = true }
piston-texture = { version = "0.5.0", optional = true }
shader_version = { version = "0.2.0", optional = true }
pistoncore-glutin_window = { version = "0.33.0", optional = true }

[features]
default = ["piston"]
piston = ["piston2d-graphics", "pistoncore-window", "pistoncore-event_loop", "gfx",
          "gfx_core", "gfx_device_gl", "piston2d-gfx_graphics", "shader_version",
          "pistoncore-glutin_window", "piston-texture"]

[dev-dependencies]
find_folder = "0.3.0"
gfx = "0.13.0"
gfx_window_glutin = "0.13.1"
image = "0.12.0"
rand = "0.3.13"
