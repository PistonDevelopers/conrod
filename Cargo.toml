[package]
name = "conrod"
version = "0.44.0"
authors = [
    "Mitchell Nordine <mitchell.nordine@gmail.com>",
    "Sven Nilsen <bvssvni@gmail.com>"
]
keywords = ["ui", "widgets", "gui", "interface", "graphics"]
description = "An easy-to-use, 100% Rust, extensible 2D GUI library."
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/pistondevelopers/conrod.git"
homepage = "https://github.com/pistondevelopers/conrod"
documentation = "http://docs.piston.rs/conrod/conrod/"

[lib]
name = "conrod"
path = "./src/lib.rs"

[dependencies]
daggy = "0.4.0"
num = "0.1.30"
pistoncore-input = "0.14.0"
rusttype = "0.2.0"

# Optional dependencies and features
# ----------------------------------
#
# None of the following dependencies are necessary to use conrod, however they may greatly
# simplify the work involved when using conrod with certain window or graphics backends.
#
# `glium`
# Provides functions for rendering the `conrod::render::Primitives` yielded by `Ui::draw`.
# Enables the `conrod::backend::glium` module.
#
# `glutin`
# Provides a function for converting glutin `Event`s to `conrod::event::Raw`s.
# Enables the `conrod::backend::glutin` module.
#
# `piston`
# Provides functions for:
# - Converting piston `GenericEvent` types to `conrod::event::Raw`s.
# - Rendering the `conrod::render::Primitives` yielded by `Ui::draw`.
# Enables the `conrod::backend::piston` module.
#
# `piston_window`
# Provides functions for:
# - Text cache `G2dTexture` construction.
# - Rendering the `conrod::render::Primitives` yielded by `Ui::draw`.
# Enables the `conrod::backend::piston_window` module.
# Note: Use the `piston` feature for `piston_window` event conversions.
#
# `event_loop`
# Enables use of piston_window backend with a non-polling event loop, only compatible with glutin_window
glium = { version = "0.15.0", optional = true }
glutin = { version = "0.6.1", optional = true }
piston2d-graphics = { version = "0.17", optional = true }
piston_window = { version = "0.54.0", optional = true }
pistoncore-glutin_window = { version = "0.30.0", optional = true }
pistoncore-window = { version = "0.22.0", optional = true }

[features]
default = ["piston", "piston_window", "event_loop"]
piston = ["piston2d-graphics"]
event_loop = ["pistoncore-window", "pistoncore-glutin_window", "glutin"]

[dev-dependencies]
find_folder = "0.3.0"
rand = "0.3.13"
